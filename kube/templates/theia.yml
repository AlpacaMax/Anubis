{{- if .Values.theia.enable }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: theia-proxy
  namespace: anubis
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    component: theia-proxy

spec:
  replicas: {{ .Values.rpc_workers.replicas }}
  {{- if .Values.api.rollingUpdates }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
      revisionHistoryLimit: 10
  {{- end }}
  selector:
    matchLabels:
      app: theia
      component: proxy
  template:
    metadata:
      labels:
        app: theia
        component: proxy
    spec:
      containers:
      - name: proxy
        image: {{ .Values.theia.proxy.image }}:{{ .Values.theia.proxy.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - name: http
          containerPort: 5000
        env:
        - name: "SECRET_KEY"
          valueFrom:
            secretKeyRef:
              name: api
              key: secret-key
        - name: "DB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: api
              key: database-password
        - name: "DB_HOST"
          value: "mariadb.mariadb.svc.cluster.local"

---

apiVersion: v1
kind: Service
metadata:
  name: theia-proxy
  namespace: anubis

spec:
  selector:
    app: theia
    component: proxy
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000


---

# Public Ingress Route /api/public/*
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ingress.route.theia.public
  namespace: anubis
  labels:
    app: theia

spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`{{ .Values.theia.proxy.domain }}`)
    services:
    - name: theia-proxy
      port: 5000
  tls:
    certResolver: tls

{{- end }}
