apiVersion: apps/v1
kind: Deployment
metadata:
  name: anubis-static
  namespace: {{ .Release.Namespace }}
  labels:
    app: anubis-static
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    component: nginx

spec:
  selector:
    matchLabels:
      app: anubis-static
  replicas: {{ .Values.static.replicas }}
  {{- if .Values.api.rollingUpdates }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  revisionHistoryLimit: 3
  {{- end }}
  template:
    metadata:
      labels:
        app: anubis-static
    spec:
      containers:
      - name: anubis-static
        image: {{ .Values.static.image }}:{{ .Values.api.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - name: web
          containerPort: 80
        {{- if .Values.static.healthCheck }}
        livenessProbe:
          exec:
            command:
              - curl
              - http://localhost/
          initialDelaySeconds: 5
          periodSeconds: 5
        {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: anubis-static
  namespace: {{ .Release.Namespace }}
  labels:
    app: anubis-static
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
spec:
  selector:
    app: anubis-static
  ports:
  - name: web
    port: 5000
    targetPort: 80

---
# Strip prefix /static
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: strip-static
  namespace: {{ .Release.Namespace }}
  labels:
    app: anubis
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
spec:
  stripPrefix:
    prefixes:
      - "/files/static"

---
# Public Ingress Route /static/*
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ingress.route.anubis.static
  namespace: {{ .Release.Namespace }}
  labels:
    app: anubis-static
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`{{ .Values.domain }}`) && PathPrefix(`/files/static/`)
    middlewares:
    {{- if .Values.vpnOnly }}
    - name: whitelist-vpn
      namespace: traefik
    {{- end }}
    - name: strip-static
      namespace: {{ .Release.Namespace }}
    services:
    - name: anubis-static
      port: 5000
  tls:
    certResolver: tls
